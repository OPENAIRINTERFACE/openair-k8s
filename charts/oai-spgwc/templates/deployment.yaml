apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    {{- include "oai-spgwc.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "oai-spgwc.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "oai-spgwc.selectorLabels" . | nindent 8 }}
      annotations:
        k8s.v1.cni.cncf.io/networks: {{ .Chart.Name }}-{{ .Values.namespace }}-net1
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
    {{- if .Values.start.tcpdump}}
      - name: tcpdump
        image: "network-tools-rhel8:v4.10.0-202205022327.p0.gbcfec9c.assembly.stream"                                                                                      
        command:
          -  /bin/sh
          -  -c
          -  /usr/sbin/tcpdump -i any port {{ .Values.service.gtpcPort }} or port {{ .Values.service.pfcpPort }} or arp or icmp -C 100 -W 10 -w /pcap/SPGWC_`date +%Y-%m-%d_%H_%M-%S-%Z`.pcap
        volumeMounts:
        - mountPath: "/pcap"
          name: {{ .Chart.Name }}-{{ .Values.namespace }}-pv
    {{- end}}
      - name: spgwc
        image: "{{ .Values.image.repository }}:{{ .Values.image.version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        ports:
        - containerPort: {{ .Values.service.pfcpPort }}
          name: oai-spgwc
        - containerPort: {{ .Values.service.gtpcPort }}
          name: s11
        volumeMounts:
          - mountPath: /openair-spgwc/etc/spgw_c.json
            name: cfg-vol
            subPath: spgw_c.json
          - mountPath: "/var/crash/core"
            name: {{ .Chart.Name }}-{{ .Values.namespace }}-pv
        {{- if .Values.start.spgwc}}
        command:
          -  /bin/sh
          -  -c
          -  echo "/var/crash/core.%e.%p.%h.%t" > /proc/sys/kernel/core_pattern && /openair-spgwc/bin/oai_spgwc -c /openair-spgwc/etc/spgw_c.json {{ .Values.log.stdout }} {{ .Values.log.file }} > /var/crash/core/SPGWC_`date +%Y-%m-%d_%H_%M-%S-%Z`.log 2>&1
        {{- else}}
        command:
          - /bin/sleep
          - infinity
        {{- end}}
      volumes:
        - name: {{ .Chart.Name }}-{{ .Values.namespace }}-pv
          persistentVolumeClaim:
            claimName: {{ .Chart.Name }}-{{ .Values.namespace }}-pvc   
        - configMap:
            name: spgwc-cfg-configmap
          name: cfg-vol
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccountName: {{ .Values.serviceAccount.name }}
      terminationGracePeriodSeconds: 5

